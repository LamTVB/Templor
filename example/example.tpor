classDefs()<{
    class Object {

      fun ==(obj) {
        return self is obj;
      }

      fun !=(obj){
        return !(self == obj);
      }

      fun print(obj) {
        obj.to_s().to_system_out();
      }

      fun to_s() {
        return null;
      }

      primitive abort(message);

      fun assert(cond,message) {
        if (!cond) {
          abort("assertion failed: " + message);
        }
      }
    }

    class Boolean {

      fun to_s() {
        if(self) {
          return "true";
        }
        return "false";
      }
    }

    class Integer {


      primitive +(i);
      primitive *(i);
      primitive %(i);
      primitive -(i);
      primitive to_s();
      primitive /(i);
    }

    class String {

      fun to_s() {
        return self;
      }

      primitive +(s);
      primitive to_system_out();
    }

    class Float{
        primitive +(f);
        primitive -(f);
        primitive *(f);
        primitive /(f);
        primitive to_s();
    }
}>;

listingI(i)<{ {{i}} }>;

humanName(name) <{ {{name}} }>;
humanName.name = "LÃ¢m";

printer_two(i) <{ print({humanName}); }>;


render(classDefs);
render(printer_two);
render(<{

i = 3.4;
j = 2 + 4;
print({humanName} + " " + j);

}>);
