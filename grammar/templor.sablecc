Language templor;

Lexer

    lower = 'a'..'z';
    upper = 'A'..'Z';
    number = ('0'..'9')+;
    string = Shortest '"' string_char* '"';
    string_char = Any - (#10 | #13);
    float = number '.' number;

    id = lower name_char*;
    name_char = upper | lower | '_';
    template_name = upper name_char*;
    template_def = Shortest '<{' Any* '}>';
    template_kw = 'template';
    super_kw = 'super';

    blank = ' ' | #13 | #10 | #9;
    comment = Shortest '/*' Any* '*/';

    Token
        template_def;

    Ignored
        blank, comment;

Parser

    program = stms;

    stms =
        {more:} stms stm |
        {zero:} ;

    stm =
        {print:} 'print' [lp:]'(' template_name ')' ';' |
        {render:} 'render' [lp:]'(' template_name ')' ';'|
        {create:} template_kw template_name special_opt '{' members '}' |
        {populate:} [template_name:]id '.' [attribute_name:]id '=' exp ';';

    members =
        members member | ;

    member =
        {definition:} 'definition' [eq:]'=' template_definition |
        {attributes:} 'attributes' [eq:]'=' '[' template_attributes ']' |
        {blocks:} 'blocks' [eq:]'=' '[' blocks_list ']';

    blocks_list =
        {more:} blocks_list ',' blockdef|
        {one:} blockdef;

    blockdef =
        {append:} 'append' [block_name:]id pos_opt [eq:]'=' template_def |
        {prepend:} 'prepend' [block_name:]id [eq:]'=' template_def |
        {definition:} [block_name:]id [eq:]'=' template_def ;

    pos_opt =
        {one:}'[' id ']' | {zero:} ;

    template_definition =
        {more:} super_kw ',' template_def |
        {super:} super_kw |
        {simple:} template_def ;

    template_attributes =
        {more:} super_kw ',' parameters_list |
        {super:} super_kw |
        {simple:} parameters_list |
        {zero:} ;

    template =
        {template_def:} template_def |
        {file_path:} string |
        {template_name:} id;

    parameters_list =
        parameter additional_parameters;

    additional_parameters =
        additional_parameters additional_parameter |;

    additional_parameter =
        ',' parameter;

    parameter =
        {name:} id;

    exp_list_opt =
        exp_list |;

    exp_list =
        {more:} exp exp_list |
        {simple:} exp;

    exp =
        {string:} string |
        {num:} number |
        {true:} 'true' |
        {false:} 'false' |
        {float:} float;

    special_opt =
        {one:} special |
        {zero:} ;

    special =
        'special' template_name;








