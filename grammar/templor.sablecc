Language templor;

Lexer

    lower = 'a'..'z';
    upper = 'A'..'Z';
    number = ('0'..'9')+;
    string = Shortest '"' string_char* '"';
    string_char = Any - (#10 | #13);
    float = number '.' number;


    id = lower name_char*;
    name_char = upper | lower | '_';
    template_def = Shortest '<{' Any* '}>';

    blank = ' ' | #13 | #10 | #9;
    comment = Shortest '/*' Any* '*/';

    Token
        template_def;

    Ignored
        blank, comment;

Parser

    program = stms;

    stms =
        {more:} stms stm |
        {zero:} ;

    stm =
        {print:} 'print' [lp:]'(' add_template ')' ';' |
        {render:} 'render' [lp:]'(' add_template ')' ';'|
        {create:} [template_name:]id '(' parameters_list_opt ')' add_template ';' |
        {populate:} [template_name:]id '.' [attribute_name:]id '=' exp ';';

    add_template =
        {add:} add_template [plus:]'+' template |
        {simple:} template;

    template =
        {template_def:} template_def |
        {file_path:} string |
        {template_name:} id;

    parameters_list_opt =
        parameters_list |;

    parameters_list =
        parameter additional_parameters;

    additional_parameters =
        additional_parameters additional_parameter |;

    additional_parameter =
        ',' parameter;

    parameter =
        {name:} id;

    exp_list_opt =
        exp_list |;

    exp_list =
        {more:} exp exp_list |
        {simple:} exp;

    exp =
        {string:} string |
        {num:} number |
        {true:} 'true' |
        {false:} 'false' |
        {float:} float;










